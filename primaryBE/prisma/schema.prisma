// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id      Int @id @default(autoincrement())
  name    String
  email   String
  password String 
}

model Zap {
  id   String  @id @unique @default(uuid())
  trigger Trigger?
  actions Action[]
  zapRun  ZapRun[]
}



model Trigger {
  id String @id @default(uuid())
  type  AvailableTriggers @relation(fields: [AvailabletriggerId], references: [id])
  AvailabletriggerId String
  zapId  String @unique
  zap   Zap @relation(fields: [zapId], references: [id])
  

}

model Action {
  id    String @id @unique @default(uuid())
  name String
  zapId   String
  zap Zap @relation(fields: [zapId], references: [id])
  type AvailableActions @relation(fields: [availableActionid], references: [id])
  availableActionid String
  sortingOrder Int @default(0)
}

model AvailableActions {
  id String @id @default(uuid())
  name String
  action Action[]
}

model AvailableTriggers {
  id String @id @default(uuid())
  name String
  trigger Trigger[]
}


model ZapRun{
  id    String @id @default(uuid())
  zapId String
  metadata Json
  Zap   Zap @relation(fields: [zapId], references: [id])
  zapRunOutbox  zapRunOutbox?
}

model zapRunOutbox {
  id     String @id @default(uuid())
  zapRunID  String @unique
     zapRun   ZapRun    @relation(fields: [zapRunID], references: [id])
}